/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateImport } from './routes/private'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as DashboardRouteImport } from './routes/_dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as PermissionsIndexImport } from './routes/permissions/index'
import { Route as DashboardUsersIndexImport } from './routes/_dashboard/users/index'
import { Route as DashboardRolesIndexImport } from './routes/_dashboard/roles/index'
import { Route as DashboardPoliciesIndexImport } from './routes/_dashboard/policies/index'
import { Route as DashboardContactsIndexImport } from './routes/_dashboard/contacts/index'
import { Route as DashboardUsersUserIdImport } from './routes/_dashboard/users/$userId'
import { Route as DashboardRolesRoleIdImport } from './routes/_dashboard/roles/$roleId'
import { Route as DashboardPoliciesUpdateImport } from './routes/_dashboard/policies/update'
import { Route as DashboardPoliciesCreateImport } from './routes/_dashboard/policies/create'
import { Route as DashboardPoliciesPolicyIdImport } from './routes/_dashboard/policies/$policyId'
import { Route as DashboardContactsContactIdImport } from './routes/_dashboard/contacts/$contactId'

// Create/Update Routes

const PrivateRoute = PrivateImport.update({
  id: '/private',
  path: '/private',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PermissionsIndexRoute = PermissionsIndexImport.update({
  id: '/permissions/',
  path: '/permissions/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUsersIndexRoute = DashboardUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardRolesIndexRoute = DashboardRolesIndexImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPoliciesIndexRoute = DashboardPoliciesIndexImport.update({
  id: '/policies/',
  path: '/policies/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardContactsIndexRoute = DashboardContactsIndexImport.update({
  id: '/contacts/',
  path: '/contacts/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardUsersUserIdRoute = DashboardUsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardRolesRoleIdRoute = DashboardRolesRoleIdImport.update({
  id: '/roles/$roleId',
  path: '/roles/$roleId',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPoliciesUpdateRoute = DashboardPoliciesUpdateImport.update({
  id: '/policies/update',
  path: '/policies/update',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPoliciesCreateRoute = DashboardPoliciesCreateImport.update({
  id: '/policies/create',
  path: '/policies/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPoliciesPolicyIdRoute = DashboardPoliciesPolicyIdImport.update({
  id: '/policies/$policyId',
  path: '/policies/$policyId',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardContactsContactIdRoute = DashboardContactsContactIdImport.update(
  {
    id: '/contacts/$contactId',
    path: '/contacts/$contactId',
    getParentRoute: () => DashboardRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/private': {
      id: '/private'
      path: '/private'
      fullPath: '/private'
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/permissions/': {
      id: '/permissions/'
      path: '/permissions'
      fullPath: '/permissions'
      preLoaderRoute: typeof PermissionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/contacts/$contactId': {
      id: '/_dashboard/contacts/$contactId'
      path: '/contacts/$contactId'
      fullPath: '/contacts/$contactId'
      preLoaderRoute: typeof DashboardContactsContactIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/policies/$policyId': {
      id: '/_dashboard/policies/$policyId'
      path: '/policies/$policyId'
      fullPath: '/policies/$policyId'
      preLoaderRoute: typeof DashboardPoliciesPolicyIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/policies/create': {
      id: '/_dashboard/policies/create'
      path: '/policies/create'
      fullPath: '/policies/create'
      preLoaderRoute: typeof DashboardPoliciesCreateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/policies/update': {
      id: '/_dashboard/policies/update'
      path: '/policies/update'
      fullPath: '/policies/update'
      preLoaderRoute: typeof DashboardPoliciesUpdateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/roles/$roleId': {
      id: '/_dashboard/roles/$roleId'
      path: '/roles/$roleId'
      fullPath: '/roles/$roleId'
      preLoaderRoute: typeof DashboardRolesRoleIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/users/$userId': {
      id: '/_dashboard/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof DashboardUsersUserIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/contacts/': {
      id: '/_dashboard/contacts/'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof DashboardContactsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/policies/': {
      id: '/_dashboard/policies/'
      path: '/policies'
      fullPath: '/policies'
      preLoaderRoute: typeof DashboardPoliciesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/roles/': {
      id: '/_dashboard/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof DashboardRolesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/users/': {
      id: '/_dashboard/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof DashboardUsersIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardContactsContactIdRoute: typeof DashboardContactsContactIdRoute
  DashboardPoliciesPolicyIdRoute: typeof DashboardPoliciesPolicyIdRoute
  DashboardPoliciesCreateRoute: typeof DashboardPoliciesCreateRoute
  DashboardPoliciesUpdateRoute: typeof DashboardPoliciesUpdateRoute
  DashboardRolesRoleIdRoute: typeof DashboardRolesRoleIdRoute
  DashboardUsersUserIdRoute: typeof DashboardUsersUserIdRoute
  DashboardContactsIndexRoute: typeof DashboardContactsIndexRoute
  DashboardPoliciesIndexRoute: typeof DashboardPoliciesIndexRoute
  DashboardRolesIndexRoute: typeof DashboardRolesIndexRoute
  DashboardUsersIndexRoute: typeof DashboardUsersIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardContactsContactIdRoute: DashboardContactsContactIdRoute,
  DashboardPoliciesPolicyIdRoute: DashboardPoliciesPolicyIdRoute,
  DashboardPoliciesCreateRoute: DashboardPoliciesCreateRoute,
  DashboardPoliciesUpdateRoute: DashboardPoliciesUpdateRoute,
  DashboardRolesRoleIdRoute: DashboardRolesRoleIdRoute,
  DashboardUsersUserIdRoute: DashboardUsersUserIdRoute,
  DashboardContactsIndexRoute: DashboardContactsIndexRoute,
  DashboardPoliciesIndexRoute: DashboardPoliciesIndexRoute,
  DashboardRolesIndexRoute: DashboardRolesIndexRoute,
  DashboardUsersIndexRoute: DashboardUsersIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/private': typeof PrivateRoute
  '/permissions': typeof PermissionsIndexRoute
  '/contacts/$contactId': typeof DashboardContactsContactIdRoute
  '/policies/$policyId': typeof DashboardPoliciesPolicyIdRoute
  '/policies/create': typeof DashboardPoliciesCreateRoute
  '/policies/update': typeof DashboardPoliciesUpdateRoute
  '/roles/$roleId': typeof DashboardRolesRoleIdRoute
  '/users/$userId': typeof DashboardUsersUserIdRoute
  '/contacts': typeof DashboardContactsIndexRoute
  '/policies': typeof DashboardPoliciesIndexRoute
  '/roles': typeof DashboardRolesIndexRoute
  '/users': typeof DashboardUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/private': typeof PrivateRoute
  '/permissions': typeof PermissionsIndexRoute
  '/contacts/$contactId': typeof DashboardContactsContactIdRoute
  '/policies/$policyId': typeof DashboardPoliciesPolicyIdRoute
  '/policies/create': typeof DashboardPoliciesCreateRoute
  '/policies/update': typeof DashboardPoliciesUpdateRoute
  '/roles/$roleId': typeof DashboardRolesRoleIdRoute
  '/users/$userId': typeof DashboardUsersUserIdRoute
  '/contacts': typeof DashboardContactsIndexRoute
  '/policies': typeof DashboardPoliciesIndexRoute
  '/roles': typeof DashboardRolesIndexRoute
  '/users': typeof DashboardUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/private': typeof PrivateRoute
  '/permissions/': typeof PermissionsIndexRoute
  '/_dashboard/contacts/$contactId': typeof DashboardContactsContactIdRoute
  '/_dashboard/policies/$policyId': typeof DashboardPoliciesPolicyIdRoute
  '/_dashboard/policies/create': typeof DashboardPoliciesCreateRoute
  '/_dashboard/policies/update': typeof DashboardPoliciesUpdateRoute
  '/_dashboard/roles/$roleId': typeof DashboardRolesRoleIdRoute
  '/_dashboard/users/$userId': typeof DashboardUsersUserIdRoute
  '/_dashboard/contacts/': typeof DashboardContactsIndexRoute
  '/_dashboard/policies/': typeof DashboardPoliciesIndexRoute
  '/_dashboard/roles/': typeof DashboardRolesIndexRoute
  '/_dashboard/users/': typeof DashboardUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/private'
    | '/permissions'
    | '/contacts/$contactId'
    | '/policies/$policyId'
    | '/policies/create'
    | '/policies/update'
    | '/roles/$roleId'
    | '/users/$userId'
    | '/contacts'
    | '/policies'
    | '/roles'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/private'
    | '/permissions'
    | '/contacts/$contactId'
    | '/policies/$policyId'
    | '/policies/create'
    | '/policies/update'
    | '/roles/$roleId'
    | '/users/$userId'
    | '/contacts'
    | '/policies'
    | '/roles'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/about'
    | '/login'
    | '/private'
    | '/permissions/'
    | '/_dashboard/contacts/$contactId'
    | '/_dashboard/policies/$policyId'
    | '/_dashboard/policies/create'
    | '/_dashboard/policies/update'
    | '/_dashboard/roles/$roleId'
    | '/_dashboard/users/$userId'
    | '/_dashboard/contacts/'
    | '/_dashboard/policies/'
    | '/_dashboard/roles/'
    | '/_dashboard/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  PrivateRoute: typeof PrivateRoute
  PermissionsIndexRoute: typeof PermissionsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  PrivateRoute: PrivateRoute,
  PermissionsIndexRoute: PermissionsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboard",
        "/about",
        "/login",
        "/private",
        "/permissions/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard/route.tsx",
      "children": [
        "/_dashboard/contacts/$contactId",
        "/_dashboard/policies/$policyId",
        "/_dashboard/policies/create",
        "/_dashboard/policies/update",
        "/_dashboard/roles/$roleId",
        "/_dashboard/users/$userId",
        "/_dashboard/contacts/",
        "/_dashboard/policies/",
        "/_dashboard/roles/",
        "/_dashboard/users/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/private": {
      "filePath": "private.tsx"
    },
    "/permissions/": {
      "filePath": "permissions/index.tsx"
    },
    "/_dashboard/contacts/$contactId": {
      "filePath": "_dashboard/contacts/$contactId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/policies/$policyId": {
      "filePath": "_dashboard/policies/$policyId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/policies/create": {
      "filePath": "_dashboard/policies/create.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/policies/update": {
      "filePath": "_dashboard/policies/update.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/roles/$roleId": {
      "filePath": "_dashboard/roles/$roleId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/users/$userId": {
      "filePath": "_dashboard/users/$userId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/contacts/": {
      "filePath": "_dashboard/contacts/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/policies/": {
      "filePath": "_dashboard/policies/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/roles/": {
      "filePath": "_dashboard/roles/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/users/": {
      "filePath": "_dashboard/users/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
