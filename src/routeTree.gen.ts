/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as PoliciesIndexImport } from './routes/policies/index'
import { Route as PoliciesUpdateImport } from './routes/policies/update'
import { Route as PoliciesCreateImport } from './routes/policies/create'
import { Route as PoliciesPolicyIdImport } from './routes/policies/$policyId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PoliciesIndexRoute = PoliciesIndexImport.update({
  id: '/policies/',
  path: '/policies/',
  getParentRoute: () => rootRoute,
} as any)

const PoliciesUpdateRoute = PoliciesUpdateImport.update({
  id: '/policies/update',
  path: '/policies/update',
  getParentRoute: () => rootRoute,
} as any)

const PoliciesCreateRoute = PoliciesCreateImport.update({
  id: '/policies/create',
  path: '/policies/create',
  getParentRoute: () => rootRoute,
} as any)

const PoliciesPolicyIdRoute = PoliciesPolicyIdImport.update({
  id: '/policies/$policyId',
  path: '/policies/$policyId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/policies/$policyId': {
      id: '/policies/$policyId'
      path: '/policies/$policyId'
      fullPath: '/policies/$policyId'
      preLoaderRoute: typeof PoliciesPolicyIdImport
      parentRoute: typeof rootRoute
    }
    '/policies/create': {
      id: '/policies/create'
      path: '/policies/create'
      fullPath: '/policies/create'
      preLoaderRoute: typeof PoliciesCreateImport
      parentRoute: typeof rootRoute
    }
    '/policies/update': {
      id: '/policies/update'
      path: '/policies/update'
      fullPath: '/policies/update'
      preLoaderRoute: typeof PoliciesUpdateImport
      parentRoute: typeof rootRoute
    }
    '/policies/': {
      id: '/policies/'
      path: '/policies'
      fullPath: '/policies'
      preLoaderRoute: typeof PoliciesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/policies/$policyId': typeof PoliciesPolicyIdRoute
  '/policies/create': typeof PoliciesCreateRoute
  '/policies/update': typeof PoliciesUpdateRoute
  '/policies': typeof PoliciesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/policies/$policyId': typeof PoliciesPolicyIdRoute
  '/policies/create': typeof PoliciesCreateRoute
  '/policies/update': typeof PoliciesUpdateRoute
  '/policies': typeof PoliciesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/policies/$policyId': typeof PoliciesPolicyIdRoute
  '/policies/create': typeof PoliciesCreateRoute
  '/policies/update': typeof PoliciesUpdateRoute
  '/policies/': typeof PoliciesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/policies/$policyId'
    | '/policies/create'
    | '/policies/update'
    | '/policies'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/policies/$policyId'
    | '/policies/create'
    | '/policies/update'
    | '/policies'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/policies/$policyId'
    | '/policies/create'
    | '/policies/update'
    | '/policies/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  PoliciesPolicyIdRoute: typeof PoliciesPolicyIdRoute
  PoliciesCreateRoute: typeof PoliciesCreateRoute
  PoliciesUpdateRoute: typeof PoliciesUpdateRoute
  PoliciesIndexRoute: typeof PoliciesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  PoliciesPolicyIdRoute: PoliciesPolicyIdRoute,
  PoliciesCreateRoute: PoliciesCreateRoute,
  PoliciesUpdateRoute: PoliciesUpdateRoute,
  PoliciesIndexRoute: PoliciesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/login",
        "/policies/$policyId",
        "/policies/create",
        "/policies/update",
        "/policies/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/policies/$policyId": {
      "filePath": "policies/$policyId.tsx"
    },
    "/policies/create": {
      "filePath": "policies/create.tsx"
    },
    "/policies/update": {
      "filePath": "policies/update.tsx"
    },
    "/policies/": {
      "filePath": "policies/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
